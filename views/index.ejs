<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
  <style>
    .window {
      min-height: 30vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      font-weight: normal;
    }
    
    .alerts {
      min-height: 8.2vh;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-start;
      font-weight: normal;
    }

        /* Styles for screens smaller than or equal to 576px */
    @media (max-width: 576px) {
      /* CSS rules for small screens */
      body {
        font-size: 5vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    /* Styles for screens between 577px and 992px */
    @media (min-width: 577px) and (max-width: 900px) {
      /* CSS rules for medium screens */
      body {
        font-size: 4vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    /* Styles for screens larger than or equal to 993px */
    @media (min-width: 901px) {
      /* CSS rules for large screens */
      body {
        font-size: 2.6vh;
        font-family: 'Bahnschrift', sans-serif;
        color:aliceblue
      }
    }

    .red-bg {
      background-color: #4aa96c;
    }

    .orange-bg {
      background-color: #c19191;
    }

    .yellow-bg {
      background-color: #eba83a;
    }

    .green-bg {
      background-color: #fd5e53;
    }

    .blue-bg {
      background-color: #4cacbc;
    }

    .purple-bg {
      background-color: #4cacbc;
    }

    .pink-bg {
      background-color: #fd5e53;
    }

    .teal-bg {
      background-color: #eba83a;
    }

    .violet-bg {
      background-color: #c19191;
    }

    .coral-bg {
      background-color: #eba83a;
    }

    .alerts-bg{
      background-color: #146356;
    }
    .alertsRed-bg{
      background-color: #fd5e53;
    }
  </style>
  <title>MoistPlants</title>
</head>

<body>
  <div class="container-fluid g-0">
    <div class="row g-0">
      <div class="col">
        <div class="window purple-bg">
          Water lvl
          <div style="display: flex;">
            <span class="fs-1" id="wlvl"></span>
            <span class="fs-1">%</span> 
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window green-bg">
          pH
          <div style="display: flex;">
            <span class="fs-1" id="ph"></span>
            <span class="fs-1">pH</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window blue-bg">
          H2O2
          <div style="display: flex;">
            <span class="fs-1" id="h2o2"></span>
            <span class="fs-1">ppm</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window teal-bg">
          CO2
          <div style="display: flex;">
            <span class="fs-1" id="co"></span>
            <span class="fs-1">ppm</span>
          </div>
        </div>
      </div>
    </div>
    <div class="row g-0">
      <div class="col">
        <div class="window red-bg">
          Water temp 1
          <div style="display: flex;">
            <span class="fs-1" id="wtemp1"></span>
            <span class="fs-1">&#8451;</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window yellow-bg">
          EC
          <div style="display: flex;">
            <span class="fs-1" id="EC"></span>
            <span class="fs-1">ÂµS/cm</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window violet-bg">
          Air temp 1
          <div style="display: flex;">
            <span class="fs-1" id="atemp1"></span>
            <span class="fs-1">&#8451;</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window pink-bg">
          RH1
          <div style="display: flex;">
            <span class="fs-1" id="rh1"></span>
            <span class="fs-1">%</span>
          </div>
        </div>
      </div>  
    </div>
    <div class="row g-0">
      <div class="col">
        <div class="window orange-bg">
          Water temp 2
          <div style="display: flex;">
            <span class="fs-1" id="wtemp2"></span>
            <span class="fs-1">&#8451;</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window blue-bg">
          ORP
          <div style="display: flex;">
            <span class="fs-1" id="ORP"></span>
            <span class="fs-1">mV</span>
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window coral-bg">
          Air temp 2
          <div style="display: flex;">
            <span class="fs-1" id="atemp2"></span>
            <span class="fs-1">&#8451;</span> 
          </div>
        </div>
      </div>
      <div class="col">
        <div class="window red-bg">
          RH2
          <div style="display: flex;">
            <span class="fs-1" id="rh2"></span>
            <span class="fs-1">%</span>
          </div>
        </div>
      </div>
    </div>
    <div class="row">
      <div class="window alerts alerts-bg fs-3" id="status">
        Status:&nbsp;
        <span id="alerts"></span> 
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
  <script
  src="https://code.jquery.com/jquery-3.7.0.js"
  integrity="sha256-JlqSTELeR4TLqP0OG9dxM7yDPqX1ox/HfgiSLBj8+kM="
  crossorigin="anonymous"></script>
  <script> //rebuild to arrow functions
function fetchAndUpdateValue() {
  fetch('/values')
    .then(response => {
      if (!response.ok) {
        throw new Error('Error fetching data')
      }
      return response.json()
    })
    .then(data => {
      const wlvl = document.getElementById('wlvl')
      const ph = document.getElementById('ph')
      const h2o2 = document.getElementById('h2o2')
      const co = document.getElementById('co')
      const wtemp1 = document.getElementById('wtemp1')
      const ec = document.getElementById('EC')
      const atemp1 = document.getElementById('atemp1')
      const rh1 = document.getElementById('rh1')
      const wtemp2 = document.getElementById('wtemp2')
      const orp = document.getElementById('ORP')
      const atemp2 = document.getElementById('atemp2')
      const rh2 = document.getElementById('rh2')
      const alerts = document.getElementById('alerts')

      console.log(data.value)
      const arr = data.value.split('&')
      console.log(arr[0])
      
      if (wlvl) {
        wlvl.textContent = arr[4]
      }
      if (ph) {
        ph.textContent = arr[5]
      }
      if (h2o2) {
        h2o2.textContent = arr[6]
      }
      if (co) {
        co.textContent = arr[7]
      }
      if (wtemp1) {
        wtemp1.textContent = arr[8]
      }
      if (ec) {
        ec.textContent = arr[9]
      }
      if (atemp1) {
        atemp1.textContent = arr[0]
      }
      if (rh1) {
        rh1.textContent = arr[2]
      }
      if (wtemp2) {
        wtemp2.textContent = arr[10]
      }
      if (orp) {
        orp.textContent = arr[11]
      }
      if (atemp2) {
        atemp2.textContent = arr[1]
      }
      if (rh2) {
        rh2.textContent = arr[3]
      }
      if (alerts) {
        if (arr[4] < 20){
          alerts.textContent = ' Water level low HOUSTON WE HAVE A PROBLEM!!11'
          document.getElementById('status').classList.add('alertsRed-bg') 
        } else if (arr[4] > 90){
          alerts.textContent = ' Water level high(potentially too high)'
          document.getElementById('status').classList.add('alertsRed-bg') 
        } else if (arr[4] == ''){
          alerts.textContent = ' No data received from Controllino'
          document.getElementById('status').classList.add('alertsRed-bg') 
        } else {
          document.getElementById('status').classList.remove('alertsRed-bg') 
          alerts.textContent = ' No alerts'
        }

      }
    })
    .catch(error => {
      console.error('Error fetching data:', error.message);
    });
}

document.addEventListener('DOMContentLoaded', function () {
  fetchAndUpdateValue();
  setInterval(fetchAndUpdateValue, 50);
});
  </script>
</body>

</html>